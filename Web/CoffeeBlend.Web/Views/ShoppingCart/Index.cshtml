@model CoffeeBlend.Web.ViewModels.OrderViewModel.CartViewModel
@{
    this.ViewData["Title"] = "Cart Page";
}

<section class="home-slider owl-carousel">
    <div class="slider-item" style="background-image: url(/images/bg_3.jpg);" data-stellar-background-ratio="0.5">
        <div class="overlay"></div>
        <div class="container">
            <div class="row slider-text justify-content-center align-items-center">
                <div class="col-md-7 col-sm-12 text-center ftco-animate">
                    <h1 class="mb-3 mt-5 bread">Cart</h1>
                    <p class="breadcrumbs"><span class="mr-2"><a asp-area="" asp-controller="Home" asp-action="Index">Home</a></span> <span>Cart</span></p>
                </div>
            </div>
        </div>
    </div>
</section>

<form>
    <section class="ftco-section ftco-cart">
        <div class="container">
            <div class="row">
                <div class="col-md-12 ftco-animate">
                    <table class="table">
                        <thead class="thead-primary">
                            <tr class="text-center">
                                <th>&nbsp;</th>
                                <th>Product</th>
                                <th>Name</th>
                                <th>Quantity</th>
                                <th>Price</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var product in Model.CartProducts)
                            {
                                <tr class="text-center">

                                    <td class="product-remove"><a type="submit" asp-area="" asp-controller="ShoppingCart" asp-route-id="@product.ProductId" asp-route-size="@product.PortionSize" asp-action="Remove"><span class="icon-close"></span></a></td>

                                    <td class="image-prod"><a asp-controller="Products" asp-action="Details" asp-route-id="@product.ProductId"><img src="@product.ProductImageUrl" width="100" height="100" class="img-fluid" alt=""></a></td>

                                    <td class="product-name">
                                        @if (string.IsNullOrEmpty(product.PortionSize) || product.PortionSize == "0")
                                        {
                                            <h3>@product.Name</h3>
                                        }
                                        else
                                        {
                                            <h3>@product.Name - @product.PortionSize</h3>
                                        }
                                        <p class="text-white">@product.Request</p>
                                    </td>

                                    <td class="quantity">
                                        <div class="input-group mb-3">
                                            <span class="input-group-btn mr-2">
                                                <button type="button" class="quantity-left-minus btn" data-price="@product.Price" data-productId="@product.Id" data-type="minus" data-field="quantity-@product.Id">
                                                    <i class="icon-minus"></i>
                                                </button>
                                            </span>
                                            <input readonly="readonly" type="number" style="-moz-appearance: textfield" id="@product.Id" name="quantity-@product.Id" data-for="@product.Id" class="form-control input-number" value="@product.Quantity" min="1" max="100">
                                            <span class="input-group-btn ml-2">
                                                <button type="button" class="quantity-right-plus btn" data-price="@product.Price" data-productId="@product.Id" data-type="plus" data-field="quantity-@product.Id">
                                                    <i class="icon-plus" aria-hidden="true"></i>
                                                </button>
                                            </span>
                                        </div>
                                    </td>
                                    <td> <span class="text-white">$</span><span class="total text-white" id="productSubTotal-@product.Id">@product.SubTotalPrice</span></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div>
                @if (!@Model.CartProducts.Any())
                {
                    <h2 class="text-center text-white">Your Cart is Empty!</h2>
                    <p class="text-center"><a asp-area="" asp-controller="Menu" asp-action="Index" class="btn btn-primary py-3 px-4">Continue Shopping</a></p>
                }
                else
                {
                    <p class="text-center"><a asp-area="" asp-controller="Menu" asp-action="Index" class="btn btn-primary py-3 px-4">Continue Shopping</a></p>
                    <div class="row justify-content-end">
                        <div class="col col-lg-3 col-md-6 mt-5 cart-wrap ftco-animate">
                            <div class="cart-total mb-3">
                                <h3>Products Totals</h3>
                                <p class="d-flex total-price">
                                    <span>Total</span>
                                    <span class="total-price" id="cartTotal">$@Model.TotalPrice</span>
                                </p>
                            </div>
                            <p class="text-center"><a asp-area="" asp-controller="ShoppingCart" asp-action="Checkout" class="btn btn-primary py-3 px-4">Proceed to Checkout</a></p>
                        </div>
                    </div>
                }
            </div>
        </div>
    </section>
</form>
@section Scripts{
    <script>
        function UpdateTotalPrice() {
            var totalPrice = 0;
            // Get all elements with class total
            $('.total').each(function () {
                totalPrice += +$(this).text(); //Text returns the price
            });

            $('#cartTotal').text('$' + totalPrice.toFixed(2));
        }

        $(function () {
            $('[data-type="plus"]').click(function (e) {
                // Stop acting like a button
                e.preventDefault();
                // Get the field name
                var fieldName = $(this).attr('data-field');
                // Get its current value
                var currentVal = parseInt($('input[name=' + fieldName + ']').val());
                // If is not undefined
                if (!isNaN(currentVal) && currentVal < 100) {
                    // Increment
                    $('input[name=' + fieldName + ']').val(currentVal + 1);

                    //Get product initial price by attribute
                    var basePrice = $(this).attr('data-price');
                    //Get product id by attribute
                    var id = $(this).attr('data-productId');

                    var productCurrentPrice = Math.round((basePrice * (currentVal + 1)) * 100) / 100;

                    $('#productSubTotal-' + id).text(productCurrentPrice);
                }

                UpdateTotalPrice();
            });
            // This button will decrement the value till 1
            $('[data-type="minus"]').click(function (e) {
                // Stop acting like a button
                e.preventDefault();
                // Get the field name
                var fieldName = $(this).attr('data-field');
                // Get its current value
                var currentVal = parseInt($('input[name=' + fieldName + ']').val());
                // If it isn't undefined or its greater than 1
                if (!isNaN(currentVal) && currentVal > 1) {
                    // Decrement one
                    $('input[name=' + fieldName + ']').val(currentVal - 1);

                    var basePrice = $(this).attr('data-price');
                    var id = $(this).attr('data-productId');

                    var productCurrentPrice = Math.round((basePrice * (currentVal - 1)) * 100) / 100;
                    $('#productSubTotal-' + id).text(productCurrentPrice);
                } else {
                    // Otherwise put a 1 there
                    $('input[name=' + fieldName + ']').val(1);
                }

                UpdateTotalPrice();
            });
        });
    </script>
}
