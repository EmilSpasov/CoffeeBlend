@model CoffeeBlend.Web.ViewModels.ProductsViewModels.SingleProductViewModel
@using CoffeeBlend.Data.Models.Enums
@{
    this.ViewData["Title"] = "Details Page";
}

<section class="ftco-section">
    <form method="post" enctype="multipart/form-data">
        <div class="container">
            <div class="row">
                <div class="col-lg-6 mb-5 ftco-animate">
                    <input type="hidden" asp-for="@Model.ImageUrl" />
                    <a><img src="@Model.ImageUrl" class="img-fluid" alt=""></a>
                </div>
                @*Returning id to the server*@
                <input type="hidden" asp-for="@Model.Id" />

                <div class="col-lg-6 product-details pl-md-5 ftco-animate">
                    <input type="hidden" asp-for="@Model.Name" />
                    <h3>@Model.Name</h3>
                    <input type="hidden" id="price" asp-for="@Model.Price" />
                    <p class="price"><span id="productPrice">$@Model.Price</span></p>
                    @*<p class="price"><span id="productPrice">$@Model.ActualPrice</span></p>*@
                    <div class="row mt-4">
                        @if (Model.CategoryProductId == 1 || Model.CategoryProductId == 3)
                        {
                            <div class="col-md-6">
                                <div class="form-group d-flex">
                                    <div class="select-wrap">
                                        <div class="icon"><span class="ion-ios-arrow-down"></span></div>
                                        <select asp-for="@Model.PortionSize" name="PortionSize" id="size" class="form-control">
                                            @for (int i = 1; i <= Html.GetEnumSelectList<PortionSize>().Count(); i++)
                                            {
                                                <option value="@i">@((PortionSize) i)</option>
                                            }
                                        </select>
                                    </div>
                                </div>
                            </div>
                        }
                        <div class="w-100"></div>
                        <div class="input-group col-md-6 d-flex mb-3">
                            <span class="input-group-btn mr-2">
                                <button type="button" class="quantity-left-minus btn" data-type="minus" data-field="quantity">
                                    <i class="icon-minus"></i>
                                </button>
                            </span>
                            <input readonly="readonly" asp-for="@Model.Quantity" type="number" style="-moz-appearance: textfield" id="quantity" name="quantity" class="form-control input-number" value="1" min="1" max="10">
                            <span class="input-group-btn ml-2">
                                <button type="button" class="quantity-right-plus btn" data-type="plus" data-field="quantity">
                                    <i class="icon-plus" aria-hidden="true"></i>
                                </button>
                            </span>
                        </div>
                    </div>
                    <h2>Any special request? Let us know</h2>
                    <div class="form-group">
                        <textarea style="text-align: left" asp-for="@Model.Request" class="form-control" placeholder="e.g No sugar" rows="2"></textarea>
                    </div>
                    <button asp-area="" asp-controller="ShoppingCart" asp-action="AddToCart" type="submit" class="btn btn-primary btn-outline-primary"><span style="color:burlywood">Add to cart</span></button>
                </div>
            </div>
            <div class="row justify-content-center ">
                <div class="col-lg-12 heading-section ftco-animate text-center">
                    <span class="subheading">Discover</span>
                    <h2 class="mb-4">Related products</h2>
                </div>
                <vc:related-products category-id="@Model.CategoryProductId" product-id="@Model.Id"></vc:related-products>
            </div>
        </div>
    </form>
</section>

@section Scripts{
    <script>
        function OnSizeChange() {
            var basePrice = @Model.Price;
            var portionSize = this.value;

            if (portionSize === '2') {
                basePrice = Math.round((@Model.Price * @Model.MediumSizePrice) * 100) / 100;
            } else if (portionSize === '3') {
                basePrice = Math.round((@Model.Price * @Model.LargeSizePrice) * 100) / 100;
            }

            document.getElementById('productPrice').innerHTML = '$' + basePrice.toFixed(2);
            document.getElementById('price').value =  basePrice;
        }

        $(function() {
            $('#size').on('change', OnSizeChange);

            $('[data-type="plus"]').click(function(e) {
                // Stop acting like a button
                e.preventDefault();
                // Get the field name
                var fieldName = $(this).attr('data-field');
                // Get its current value
                var currentVal = parseInt($('input[name=' + fieldName + ']').val());
                // If is not undefined
                if (!isNaN(currentVal) && currentVal < 10) {
                    // Increment
                    $('input[name=' + fieldName + ']').val(currentVal + 1);
                    //document.getElementById('quantity').value++;
                }
            });
            // This button will decrement the value till 1
            $('[data-type="minus"]').click(function(e) {
                // Stop acting like a button
                e.preventDefault();
                // Get the field name
                var fieldName = $(this).attr('data-field');
                // Get its current value
                var currentVal = parseInt($('input[name=' + fieldName + ']').val());
                // If it isn't undefined or its greater than 1
                if (!isNaN(currentVal) && currentVal > 1) {
                    // Decrement one
                    $('input[name=' + fieldName + ']').val(currentVal - 1);
                    //document.getElementById('quantity').value--;

                } else {
                    // Otherwise put a 1 there
                    $('input[name=' + fieldName + ']').val(1);
                    //document.getElementById('quantity').value = 1;
                }
            });
        });
    </script>
}